{"version":3,"sources":["script.js"],"names":["$","AOS","init","once","window","on","scrollToTop","scrollTop","fadeIn","fadeOut","animate","document","ready","width","this","siblings","height","defaultCarouselSettings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","pauseOnHover","autoplay","autoplaySpeed","variableWidth","initCarousel","carousel","settings","slick","carousels","observer","IntersectionObserver","entries","forEach","element","isIntersecting","unobserve","target","dispatchEvent","Event","root","rootMargin","threshold","map","_idx","observe","initCarousels","jQuery"],"mappings":"CAEA,SAAWA,GACT,aAOAC,IAAIC,KAAK,CACPC,MAAM,IAGRH,EAAEI,QAAQC,GAAG,SAAU,WAErB,MAAMC,EAAcN,EAAE,mBACPA,EAAEI,QAAQG,aAAe,IAC1B,IACZD,EAAYE,OAAO,KAEnBF,EAAYG,QAAQ,OAKxBT,EAAE,kBAAkBK,GAAG,QAAS,WAO9B,OANAL,EAAE,aAAaU,QACb,CACEH,UAAW,GAEb,MAEK,IAGTP,EAAEW,UAAUC,MAAM,YAEFZ,EAAEI,QAAQS,SAAW,GACvB,KACVb,EAAE,8BAA8BK,GAAG,QAAS,WAC1CL,EAAEc,MAAMC,SAAS,kBAAkBL,QACjC,CACEM,OAAQ,UAEV,OAUN,MAAMC,EAA0B,CAG9BC,MAAM,EACNC,QAAQ,EAIRC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAEhBC,cAAc,EAEdC,cAAc,EAEdC,UAAU,EACVC,cAAe,IAEfC,eAAe,GAIjB,SAASC,EAAaC,GAIpB,MAAMC,EAAW,IACZd,GAILjB,EAAE8B,GAAUE,MAAMD,IAGpB,WACE,MAAME,EAAYjC,EAAE,mBACpB,GAAI,yBAA0BI,OAAQ,CAEpC,MAgBM8B,EAAW,IAAIC,qBAXnB,CAACC,EAASF,KACRE,EAAQC,QAASC,IACXA,EAAQC,iBAEVV,EAAyCS,EAAc,QACvDJ,EAASM,UAAUF,EAAQG,QAE3BrC,OAAOsC,cAAc,IAAIC,MAAM,eAIa,CAElDC,KAAM,KACNC,WAAY,MACZC,UAAW,IAEbb,EAAUc,IAAI,CAACC,EAAMlB,IAAaI,EAASe,QAAQnB,SAGnDG,EAAUc,IAAI,CAACC,EAAMlB,IAAaD,EAAaC,IAInDoB,KA1HJ,CA4HGC","sourcesContent":["// @ts-check\n\n(function ($) {\n  \"use strict\";\n\n  // ----------------------------\n  // AOS\n  // ----------------------------\n\n  // @ts-ignore\n  AOS.init({\n    once: true,\n  });\n\n  $(window).on(\"scroll\", function () {\n    //.Scroll to top show/hide\n    const scrollToTop = $(\".scroll-top-to\");\n    const scroll = $(window).scrollTop() || 0;\n    if (scroll >= 200) {\n      scrollToTop.fadeIn(200);\n    } else {\n      scrollToTop.fadeOut(100);\n    }\n  });\n\n  // scroll-to-top\n  $(\".scroll-top-to\").on(\"click\", function () {\n    $(\"body,html\").animate(\n      {\n        scrollTop: 0,\n      },\n      500\n    );\n    return false;\n  });\n\n  $(document).ready(function () {\n    // navbarDropdown\n    const width = $(window).width() || 0;\n    if (width < 992) {\n      $(\".main-nav .dropdown-toggle\").on(\"click\", function () {\n        $(this).siblings(\".dropdown-menu\").animate(\n          {\n            height: \"toggle\",\n          },\n          300\n        );\n      });\n    }\n\n    // -----------------------------\n    //  Shots Slider\n    // -----------------------------\n\n    /** @type {JQuerySlickOptions} */\n    const defaultCarouselSettings = {\n      // @see https://kenwheeler.github.io/slick/\n\n      dots: true,\n      arrows: false,\n\n      // lazyLoad: \"ondemand\",\n\n      infinite: true,\n      speed: 1000,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n\n      swipeToSlide: true,\n\n      pauseOnHover: true,\n\n      autoplay: true,\n      autoplaySpeed: 2000,\n\n      variableWidth: true,\n    };\n\n    /** @param {HTMLElement} carousel */\n    function initCarousel(carousel) {\n      // const type = carousel.getAttribute(\"data-carousel-type\")\n      // const extraSettings = extraCarouselSettings[type]\n      // const seedSettings = seedResponsive(responsiveSeeds[type])\n      const settings = {\n        ...defaultCarouselSettings,\n        // ...extraSettings,\n        // ...seedSettings\n      };\n      $(carousel).slick(settings);\n    }\n\n    function initCarousels() {\n      const carousels = $(\".slick-carousel\");\n      if (\"IntersectionObserver\" in window) {\n        // IntersectionObserver Supported\n        const onChange =\n          /**\n           * @param {IntersectionObserverEntry[]} entries\n           * @param {IntersectionObserver} observer\n           */\n          (entries, observer) => {\n            entries.forEach((element) => {\n              if (element.isIntersecting) {\n                // Stop watching and load the slickSlider\n                initCarousel(/** @type {HTMLElement} */ (element.target));\n                observer.unobserve(element.target);\n                // Trick to allow to catch following AOS observers\n                window.dispatchEvent(new Event('resize'));\n              }\n            });\n          };\n        const observer = new IntersectionObserver(onChange, {\n          // @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#creating_an_intersection_observer\n          root: null,\n          rootMargin: \"50%\",\n          threshold: 0.0,\n        });\n        carousels.map((_idx, carousel) => observer.observe(carousel));\n      } else {\n        // IntersectionObserver NOT Supported\n        carousels.map((_idx, carousel) => initCarousel(carousel));\n      }\n    }\n\n    initCarousels();\n  });\n})(jQuery);\n"],"file":"script.js"}